<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Импорт Экспорт данных | 1C-developer]]></title>
  <link href="http://developer1c.ru/blog/categories/Импорт-Экспорт-данных/atom.xml" rel="self"/>
  <link href="http://developer1c.ru/"/>
  <updated>2012-09-18T16:47:52+11:00</updated>
  <id>http://developer1c.ru/</id>
  <author>
    <name><![CDATA[Роман Беляев]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Хранение остатков поставщика у себя в базе]]></title>
    <link href="http://developer1c.ru/blog/2012/09/06/khranieniie-ostatkov-postavshchika-u-siebia-v-bazie/"/>
    <updated>2012-09-06T15:47:00+11:00</updated>
    <id>http://developer1c.ru/blog/2012/09/06/khranieniie-ostatkov-postavshchika-u-siebia-v-bazie</id>
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;В этой статье, я хотел бы рассказать об опыте настройки хранения остатков по складу поставщика. Почему именно об этом? Потому что:<!-- more --></p>

<ol>
<li>В этом решении затрагивается механизм обработки в запросе таблицы значений. Что в целом может пригодиться.</li>
<li>Затрагивается механизм формирования таблицы движений сразу в запросе.</li>
<li>Решение имеет практическую ценность.</li>
<li>Было интересно :)</li>
</ol>


<p>Заказчиком было поставлено условие: изменение конфигурации, должно быть обоснованным и не происходить без надобности. Были найдены и рассмотрены следующие варианты:</p>

<ol>
<li>Добавление регистра в базу. Загрузка туда остатков, да и вообще всего что можно загрузить.</li>
<li>Загрузка данных из экселя (Именно в этом формате поставщик хранит свои данные) каждый раз при открытии подбора в документ отгрузки.</li>
<li>Создание нового склада, и загрузка данных туда корректирующим документом.</li>
</ol>


<p>&nbsp;&nbsp;&nbsp;&nbsp;Первые два способа подразумевают модификацию обработки подбора в документ реализации  а один из них еще и добавление регистра, что само по себе не страшно конечно, но для заказчика не желательно. А во втором случае, надо каждый раз читать эксель, что тоже не очень хорошо. После <a href="http://www.forum.mista.ru/topic.php?id=619127">консультаций с комьюнити</a>, было выяснено, что вроде как все считают, что хранить  остатки у себя в базе нельзя, но почему, никто сказать не может. Решили остановиться на третьем варианте.</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;И так что мы будем делать:
1. Загрузим из подсунутого экселя остатки поставщика
2. Подсчитаем дельту, на которую надо скорректировать остатки.
3. Создадим документ «КоорректировкаЗаписейРегистраНакопления» и в него зальем движения.
И так: Читаем эксель в таблицу значений.
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Функция ПрочитатьЭксель()&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>КСАртикул = Новый КвалификаторыСтроки(25);
</span><span class='line'>Массив = Новый Массив;
</span><span class='line'>Массив.Добавить(Тип("Строка"));
</span><span class='line'>ОписаниеТиповАртикул = Новый ОписаниеТипов(Массив, , КСАртикул);   
</span><span class='line'>
</span><span class='line'>Массив.Очистить();
</span><span class='line'>КЧ = Новый КвалификаторыЧисла(10);
</span><span class='line'>Массив.Добавить(Тип("Число"));
</span><span class='line'>ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);    
</span><span class='line'>
</span><span class='line'>ТЗ = Новый ТаблицаЗначений;
</span><span class='line'>ТЗ.Колонки.Добавить("Артикул", ОписаниеТиповАртикул);
</span><span class='line'>ТЗ.Колонки.Добавить("Количество", ОписаниеТиповЧ);
</span><span class='line'>
</span><span class='line'>Попытка
</span><span class='line'>    Excel = Новый COMОбъект("Excel.Application");
</span><span class='line'>    //Excel.WorkBooks.Open("D:\Базы\НомеенклатураРулевойОбрезан.xls");
</span><span class='line'>    Excel.WorkBooks.Open(ИмяФайла);
</span><span class='line'>    Состояние("Обработка файла Microsoft Excel");
</span><span class='line'>    ExcelЛист = Excel.Sheets(1);
</span><span class='line'>Исключение
</span><span class='line'>    Сообщить("Не удалось обработать файл!");
</span><span class='line'>    Возврат "";
</span><span class='line'>КонецПопытки;   
</span><span class='line'>
</span><span class='line'>Для СтрокаЭксель = СтрокаНачало По СтрокаОкончание Цикл
</span><span class='line'>    Прогресс = (СтрокаЭксель / СтрокаОкончание) * 100;
</span><span class='line'>    ЭлементыФормы.СтрокаСтатуса.Заголовок = "Считывается эксель в память " + СтрокаЭксель + " из " + СтрокаОкончание;
</span><span class='line'>
</span><span class='line'>    Зн = ExcelЛист.Cells(СтрокаЭксель, КолонкаАртикул).Text;
</span><span class='line'>    АртикулВДокумент = СокрЛ(ExcelЛист.Cells(СтрокаЭксель, КолонкаАртикул).Text);
</span><span class='line'>    КолвоВДокумент = СокрЛ(ExcelЛист.Cells(СтрокаЭксель, КолонкаКоличество).Text);
</span><span class='line'>    КолвоВДокумент = ?(КолвоВДокумент = "", 0, Число(КолвоВДокумент));
</span><span class='line'>
</span><span class='line'>    НоваяСтрокаТЗ = ТЗ.Добавить();
</span><span class='line'>    НоваяСтрокаТЗ.Артикул = АртикулВДокумент;
</span><span class='line'>    НоваяСтрокаТЗ.Количество = КолвоВДокумент;
</span><span class='line'>КонецЦикла;   
</span><span class='line'>
</span><span class='line'>Excel.WorkBooks.Close();
</span><span class='line'>Excel = 0;
</span><span class='line'>Возврат ТЗ;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>КонецФункции // ПрочитатьЭксель()</span></code></pre></td></tr></table></div></figure></notextile></div>
&nbsp;&nbsp;&nbsp;&nbsp;Я читаю эксель в типизизрованную таблицу значений, потому что для обработки таблицы запросом она должна быть типизирована. На форме есть надпись с названием «СтрокаСтатуса» которая рассказывает про текущий ход загрузки данных из экселя. Так же есть поля ввода в которых лежат номера колонок где артикул номенклатуры а где количество. Здесь вроде все настолько просто, что даже не знаю что тут прокомментировать. Ну раз с первым моментом нам все ясно, перейдем к вычислению дельты которую надо грузить в регистр. Для начала, что бы обращаться к этой таблице в запросе, надо ее поместить во временную таблицу, это не очень сложно и делается с помощью вот такого кода:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ТЗЭксель = ПрочитатьЭксель();&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>МВТ = Новый МенеджерВременныхТаблиц;
</span><span class='line'>ТаблицаЭксель = Новый Запрос;
</span><span class='line'>ТаблицаЭксель.МенеджерВременныхТаблиц = МВТ;
</span><span class='line'>ТаблицаЭксель.Текст =&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>"Выбрать
</span><span class='line'>|   *
</span><span class='line'>|ПОМЕСТИТЬ ДокЭксель
</span><span class='line'>|ИЗ
</span><span class='line'>|&amp;ТаблицаСДанными КАК Таблица";
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>ТаблицаЭксель.УстановитьПараметр("ТаблицаСДанными", ТЗЭксель);
</span><span class='line'>ТаблицаЭксель.Выполнить();</span></code></pre></td></tr></table></div></figure></notextile></div>
Таблица есть, теперь перейдем к загрузке. Так как в экселе могут быть уже существующие записи или не быть тех которые есть в регистре, мы будем привязываться к справочнику номенклатура. Собственно вот он запрос:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ВЫБРАТЬ&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокНаСкладе,
</span><span class='line'>ЕСТЬNULL(ДокЭксель.Количество, 0) КАК КоличествоЭксель,
</span><span class='line'>ВЫБОР
</span><span class='line'>    КОГДА ЕСТЬNULL(ДокЭксель.Количество, 0) - ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) &lt; 0
</span><span class='line'>        ТОГДА 0 - (ЕСТЬNULL(ДокЭксель.Количество, 0) - ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0))
</span><span class='line'>    ИНАЧЕ ЕСТЬNULL(ДокЭксель.Количество, 0) - ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0)
</span><span class='line'>КОНЕЦ КАК Количество,
</span><span class='line'>&amp;Склад,
</span><span class='line'>Товар.Ссылка КАК Номенклатура,
</span><span class='line'>ЗНАЧЕНИЕ(Справочник.Качество.Новый) КАК Качество,
</span><span class='line'>ВЫБОР
</span><span class='line'>    КОГДА ЕСТЬNULL(ДокЭксель.Количество, 0) - ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) &gt; 0
</span><span class='line'>        ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
</span><span class='line'>    ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
</span><span class='line'>КОНЕЦ КАК ВидДвижения,
</span><span class='line'>ИСТИНА КАК Активность,
</span><span class='line'>&amp;Период,
</span><span class='line'>&amp;Док КАК Регистратор
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>ИЗ&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>Справочник.Номенклатура КАК Товар
</span><span class='line'>    ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(, Склад = &amp;Склад) КАК ТоварыНаСкладахОстатки
</span><span class='line'>    ПО Товар.Ссылка = ТоварыНаСкладахОстатки.Номенклатура
</span><span class='line'>    ЛЕВОЕ СОЕДИНЕНИЕ ДокЭксель КАК ДокЭксель
</span><span class='line'>    ПО Товар.Артикул = ДокЭксель.Артикул
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>ГДЕ&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>Товар.Артикул &lt;&gt; ""
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div>
Не забываем, что для того что бы обратиться к временной таблице, нам надо указать менеджер временных таблиц:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Запрос.МенеджерВременныхТаблиц = МВТ;</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>ЕСТЬNULL нам гарантирует возврат числа в случае работы соединений, разницу мы получаем в строках с 4 по 8, строки с 9й по 19ю формируют значения для загрузки данных в регистр, собственно все почти готово. Осталось выгрузить результат в таблицу и удалить те значения которые грузить не надо(количество = 0) :
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ДвиженияВДокумент = Запрос.Выполнить().Выгрузить();//"Склад,Номенклатура,Качество,Количество"
</span><span class='line'>НулевыеДвижения = ДвиженияВДокумент.НайтиСтроки(Новый Структура("Количество",0));
</span><span class='line'>Для Каждого СтрокаТаблицы Из НулевыеДвижения Цикл&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>ДвиженияВДокумент.Удалить(СтрокаТаблицы);
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>КонецЦикла; &lt;br/></span></code></pre></td></tr></table></div></figure></notextile></div>
Создать документ корректировки и добавить строку в ТЧ которая укажет на регистр, это нужно для отображения документа и обеспечения возможности его редактировать.
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>НовыйДок = Документы.КорректировкаЗаписейРегистров.СоздатьДокумент();
</span><span class='line'>НовыйДок.Дата = ТекущаяДата();
</span><span class='line'>СтрокаТЧ = НовыйДок.ТаблицаРегистровНакопления.Добавить();
</span><span class='line'>СтрокаТЧ.Имя = "ТоварыНаСкладах";
</span><span class='line'>СтрокаТЧ.Представление = "Товары на складах";
</span><span class='line'>НовыйДок.Записать();
</span><span class='line'>НовыйДок = НовыйДок.Ссылка;</span></code></pre></td></tr></table></div></figure></notextile></div>
И собственно загрузить данные в регистр
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>НаборВРегистр = РегистрыНакопления.ТоварыНаСкладах.СоздатьНаборЗаписей();
</span><span class='line'>НаборВРегистр.Отбор.Регистратор.Значение = НовыйДок;
</span><span class='line'>НаборВРегистр.Загрузить(ДвиженияВДокумент.Скопировать(,"Период,Регистратор,Активность,ВидДвижения,Склад,Номенклатура,Качество,Количество"));
</span><span class='line'>ЫНаборВРегистр.Записать();</span></code></pre></td></tr></table></div></figure></notextile></div>
&nbsp;&nbsp;&nbsp;&nbsp;Как вы могли заметить документ мы уже не трогаем, его не надо, не записывать, не проводить, он просто является основанием для записи в регистр.
Собственно на этом все, внимательный читатель наверняка уже нашел ошибку а вы? ;)
Как обычно для тех кто дочитал или прокрутил до конца как обычно бонус: <a href="http://26226.selcdn.ru/1c_dev_files/files/%D0%97%D0%B0%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D0%B0%D0%92%D0%9D%D0%BE%D0%B2%D1%8B%D0%B9%D0%A1%D0%BA%D0%BB%D0%B0%D0%B4.epf">Обработка про которую я рассказывал в этом посте</a></p>
]]></content>
  </entry>
  
</feed>
