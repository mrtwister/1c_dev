<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Разработчик 1С]]></title>
  <link href="http://developer1c.ru/atom.xml" rel="self"/>
  <link href="http://developer1c.ru/"/>
  <updated>2013-09-09T04:26:25-07:00</updated>
  <id>http://developer1c.ru/</id>
  <author>
    <name><![CDATA[Роман Беляев]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Двойные штрихкода и история одной обработки]]></title>
    <link href="http://developer1c.ru/blog/2013/09/08/dvoinyie-shtrikhkoda/"/>
    <updated>2013-09-08T22:03:00-07:00</updated>
    <id>http://developer1c.ru/blog/2013/09/08/dvoinyie-shtrikhkoda</id>
    <content type="html"><![CDATA[<h3>Преамбула</h3>

<p>В какой то момент в базе встала проблема двойных штрихкодов. Причем ситация до того как на нее обратили внимание, приобрела катосторофический характер и имела полторы тысячи дублей штрихкодов (когда один штрихкод принадлежит нескольким товарам) и порядка 25ти тысяч дублей товаров (когда у одного товарам есть несколько штрихкодов). Что тому виной? На текущий момент уже сложно сказать. Возможно РИБ, когда одному и тому же товару присваивают штрихкод в разных базах. Возможно свою лепту внесли слияния нескольких баз с одинаковым товаром, но разными штрихкодами. Скорее всего все вместе + какой то еще фактор, который мы пока не можем найти. Слишком много вышло дублей, почти четверть базы. Так или иначе встала задача с этими штрихкодами что то сделать.<!-- more --></p>

<h3>Постановка задачи.</h3>

<p>Необходимо найти задублирововашиеся штрихкода и показить пользователю в удобном виде. Дать возможность что то сделать сразу с этими штрихкодами без необходимости лазить по справочникам и регистрам. Если говорить конкретно, то у пользователя должна быть возможность:</p>

<ol>
<li>Удалить все штрихкода у владельца, кроме выделенного.</li>
<li>Удалить конкретный лишний штрихкод.</li>
<li>Одним махом удалить все лишние дубли, оставив по одному на владельца.</li>
<li>Удалить все штрихкода которые засветились как задублированные.</li>
</ol>


<h3>Приступим к реализации первой части.</h3>

<p>Поиск лишних штрихкодов. Сам поиск достататочно банален: нужно воспользоваться функций КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СюдаУказатьПолеДляГруппировки). В самом простом случае, запрос будет выглядеть вот так:</p>

<figure class="code"><p style="text-align: left; font-family: courier new,courier; color: black">
<font color=blue>ВЫБРАТЬ<br>
&nbsp; &nbsp; </font>Штрихкоды.Штрихкод<font color=blue>,<br>
&nbsp; &nbsp; </font><font color=brown>КОЛИЧЕСТВО</font><font color=blue>(РАЗЛИЧНЫЕ </font>Штрихкоды.Владелец<font color=blue>) КАК </font>Владелец<br>
<font color=blue>ИЗ<br>
&nbsp; &nbsp; </font>РегистрСведений.Штрихкоды <font color=blue>КАК </font>Штрихкоды<br>
<br>
<font color=blue>СГРУППИРОВАТЬ ПО<br>
&nbsp; &nbsp; </font>Штрихкоды.Штрихкод</p></figure>


<p>Для того, что бы отфильтровать результаты запроса необходимо его обернуть во вложеный запрос и тогда уже можно накладывать условия на результат его работы. В данном случае, мы сделаем вот так:
<img src="http://26226.selcdn.ru/from_st/1/1.gif" title="Сделать вложенный запрос" alt="Картинка с вкладыванием запроса" />
Вот результат этих действий. Ну вот вроде все нормльно, но как то неудобно, для удобства наверно не помешает сгруппировать результаты по штрихкодам. В результате мы можем получить вот такой запрос. Вот результат его работы в консоли.
<img src="https://api.monosnap.com/image/download?id=5e8qdGdh0ss6sMzCTYOarse6J" title="Результат работы запроса в консоли" alt="Результат работы запроса" />
Этот вариант удобен для первого варианта поиска, сделать запрос для второго варианта по аналогии не должно составить труда. Запросы готовы, но не будет же пользователь смотреть на результат его работы из консоли. Здесь нам и поможет дерево значений. Смысл работы с деревом следующий: дерево содержит колекцию колонок и строк. Коллекция колонок не отличается от коллекции колонок в таблице значений и нас не интересует. Коллекция строк немного инетереснее, каждая строка ее может содержать такую же коллекцию строк, каждая строка которой&#8230; вообщем я думаю мысль понятна, таким образом и организуется иерархия. Используем обход результатов запроса по группировкам, для того что сформировать удобное дерево:</p>

<p><code class><p style="text-align: left; font-family: courier new,courier; color: blue">
&nbsp; &nbsp; Выборка <font color=red>= </font>Запрос<font color=red>.</font>Выполнить<font color=red>().</font>Выбрать<font color=red>(</font>ОбходРезультатаЗапроса<font color=red>.</font>ПоГруппировкам<font color=red>);<br>
&nbsp; &nbsp; </font>ЭтаФорма<font color=red>.</font>Заголовок <font color=red>= </font><font color=black>"Найдено " </font><font color=red>+ </font>Выборка<font color=red>.</font>Количество<font color=red>();<br>
&nbsp; &nbsp; Пока </font>Выборка<font color=red>.</font>Следующий<font color=red>() Цикл<br>
&nbsp; &nbsp; &nbsp; &nbsp; </font>НоваяСтрокаТП <font color=red>= </font>ТабличноеПоле<font color=red>.</font>Строки<font color=red>.</font>Добавить<font color=red>();<br>
&nbsp; &nbsp; &nbsp; &nbsp; </font>НоваяСтрокаТП<font color=red>.</font>Номенклатура <font color=red>= </font>Выборка<font color=red>.</font>Штрихкод<font color=red>;<br></p>

<br>


<p>&nbsp; &nbsp; &nbsp; &nbsp; </font>ВыборкаШтрихКода <font color=red>= </font>Выборка<font color=red>.</font>Выбрать<font color=red>();<br>
&nbsp; &nbsp; &nbsp; &nbsp; Пока </font>ВыборкаШтрихКода<font color=red>.</font>Следующий<font color=red>() Цикл<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </font>НоваяСтрокаВладелец <font color=red>= </font>НоваяСтрокаТП<font color=red>.</font>Строки<font color=red>.</font>Добавить<font color=red>();<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </font>НоваяСтрокаВладелец<font color=red>.</font>Номенклатура <font color=red>= </font>ВыборкаШтрихКода<font color=red>.</font>Владелец<font color=red>;<br>
&nbsp; &nbsp; &nbsp; &nbsp; КонецЦикла;<br>
&nbsp; &nbsp; КонецЦикла;<br>
</font></p></code></p>

<p>Как следствие мы можем получить вот такую форму:
<img src="https://api.monosnap.com/image/download?id=wDPn9V8vDlujcauOfMSIonqUr" title="Сгруппированные штрихкода на форме" alt="Форма обработки" /></p>

<h3>Работа с регистром штрихкодов</h3>

<p>Когда есть все нужные данные можно начинать работать с регистром штрихкодов. Так как у нас ищутся не только штрихкода с несколькими владельцами, но и владельцы с несколькими штрихкодами, то состав табличного поля может быть разным, это необходимо учитывать. Приступим к реализации п1 - Удалить все штрихкода кроме выделенного. Для этого подготовим данные для записи в регистр. Выделим значение отобора и штрихкод который нам надо оставить:</p>

<p style="text-align: left; font-family: courier new,courier; color: blue">
&nbsp; &nbsp; СтруктураВРегистр <font color=red>= Новый </font>Структура<font color=red>(</font><font color=black>&#8220;КлючОтбора, ЗначениеОтбора, ШтрихКод, Владелец&#8221;</font><font color=red>);<br>
<br>
&nbsp; &nbsp; Если </font>ТипЗнч<font color=red>(</font>СтрокаДерева<font color=red>.</font>Номенклатура<font color=red>) = </font>Тип<font color=red>(</font><font color=black>&#8220;СправочникСсылка.Номенклатура&#8221;</font><font color=red>)<br>
&nbsp; &nbsp; &nbsp; &nbsp; ИЛИ </font>ТипЗнч<font color=red>(</font>СтрокаДерева<font color=red>.</font>Номенклатура<font color=red>) = </font>Тип<font color=red>(</font><font color=black>&#8220;СправочникСсылка.ИнформационныеКарты&#8221;</font><font color=red>) Тогда<br>
&nbsp; &nbsp; &nbsp; &nbsp; </font>СтруктураВРегистр<font color=red>.</font>КлючОтбора <font color=red>= </font><font color=black>&#8220;Штрихкод&#8221;</font><font color=red>;<br>
&nbsp; &nbsp; &nbsp; &nbsp; </font>СтруктураВРегистр<font color=red>.</font>ЗначениеОтбора <font color=red>= </font>СтрокаДерева<font color=red>.</font>Родитель<font color=red>.</font>Номенклатура<font color=red>;<br>
<br>
&nbsp; &nbsp; &nbsp; &nbsp; </font>СтруктураВРегистр<font color=red>.</font>Штрихкод <font color=red>= </font>СтрокаДерева<font color=red>.</font>Родитель<font color=red>.</font>Номенклатура<font color=red>;<br>
&nbsp; &nbsp; &nbsp; &nbsp; </font>СтруктураВРегистр<font color=red>.</font>Владелец <font color=red>= </font>СтрокаДерева<font color=red>.</font>Номенклатура<font color=red>;<br>
&nbsp; &nbsp; Иначе<br>
&nbsp; &nbsp; &nbsp; &nbsp; </font>СтруктураВРегистр<font color=red>.</font>КлючОтбора <font color=red>= </font><font color=black>&#8220;Владелец&#8221;</font><font color=red>;<br>
&nbsp; &nbsp; &nbsp; &nbsp; </font>СтруктураВРегистр<font color=red>.</font>ЗначениеОтбора <font color=red>= </font>СтрокаДерева<font color=red>.</font>Родитель<font color=red>.</font>Номенклатура<font color=red>;<br>
<br>
&nbsp; &nbsp; &nbsp; &nbsp; </font>СтруктураВРегистр<font color=red>.</font>Штрихкод <font color=red>= </font>СтрокаДерева<font color=red>.</font>Номенклатура<font color=red>;<br>
&nbsp; &nbsp; &nbsp; &nbsp; </font>СтруктураВРегистр<font color=red>.</font>Владелец <font color=red>= </font>СтрокаДерева<font color=red>.</font>Родитель<font color=red>.</font>Номенклатура<font color=red>;<br>
&nbsp; &nbsp; КонецЕсли;<br>
</font></p>


<p>Теперь надо удалить все &#8220;лишние&#8221; штрихкода кроме конкретного, того на который указал пользователь. Я решил этот вопрос просто: я очищаю набор по указанному отбору и добавляю нужный штрихкод. По моему это самый простой и быстрый способ. Вот код:</p>

<p style="text-align: left; font-family: courier new,courier; color: blue">
НаборЗаписей <font color=red>= </font>РегистрыСведений<font color=red>.</font>Штрихкоды<font color=red>.</font>СоздатьНаборЗаписей<font color=red>();<br>
</font>НаборЗаписей<font color=red>.</font>Отбор<font color=red>[</font>СтруктураСДанными<font color=red>.</font>КлючОтбора<font color=red>].</font>Установить<font color=red>(</font>СтруктураСДанными<font color=red>.</font>ЗначениеОтбора<font color=red>);<br>
</font>НаборЗаписей<font color=red>.</font>Записать<font color=red>();<br>
<br>
</font>НоваяЗаписьНабора <font color=red>= </font>НаборЗаписей<font color=red>.</font>Добавить<font color=red>();<br>
</font>НоваяЗаписьНабора<font color=red>.</font>Владелец <font color=red>= </font>СтруктураСДанными<font color=red>.</font>Владелец<font color=red>;<br>
</font>НоваяЗаписьНабора<font color=red>.</font>ЕдиницаИзмерения <font color=red>= </font>СтруктураСДанными<font color=red>.</font>Владелец<font color=red>.</font>ЕдиницаХраненияОстатков<font color=red>;<br>
</font>НоваяЗаписьНабора<font color=red>.</font>ТипШтрихкода <font color=red>= </font>ПланыВидовХарактеристик<font color=red>.</font>ТипыШтрихкодов<font color=red>.</font>EAN13<font color=red>;<br>
</font>НоваяЗаписьНабора<font color=red>.</font>Штрихкод <font color=red>= </font>СтруктураСДанными<font color=red>.</font>ШтрихКод<font color=red>;<br>
</font>НоваяЗаписьНабора<font color=red>.</font>Качество <font color=red>= </font>Справочники<font color=red>.</font>Качество<font color=red>.</font>Новый<font color=red>;<br>
<br>
</font>НаборЗаписей<font color=red>.</font>Записать<font color=red>();<br>
</font></p>


<p>Перебирая строки дерева значений можно реализовать и п.3. Мы же идем дальше и приступаем к п.2. Для этих целей я использовал менеджер записи, в целом тут все просто до безобразия:</p>

<p style="text-align: left; font-family: courier new,courier; color: blue">
&nbsp; &nbsp; <font color=red>Если </font>ТипЗнч<font color=red>(</font>ЭлементыФормы<font color=red>.</font>ТабличноеПоле<font color=red>.</font>ТекущиеДанные<font color=red>.</font>Номенклатура<font color=red>) = </font>Тип<font color=red>(</font><font color=black>&#8220;СправочникСсылка.Номенклатура&#8221;</font><font color=red>)<br>
&nbsp; &nbsp; &nbsp; &nbsp; ИЛИ </font>ТипЗнч<font color=red>(</font>ЭлементыФормы<font color=red>.</font>ТабличноеПоле<font color=red>.</font>ТекущиеДанные<font color=red>.</font>Номенклатура<font color=red>) = </font>Тип<font color=red>(</font><font color=black>&#8220;СправочникСсылка.ИнформационныеКарты&#8221;</font><font color=red>) Тогда<br>
&nbsp; &nbsp; &nbsp; &nbsp; </font>Штрихкод <font color=red>= </font>ЭлементыФормы<font color=red>.</font>ТабличноеПоле<font color=red>.</font>ТекущаяСтрока<font color=red>.</font>Родитель<font color=red>.</font>Номенклатура<font color=red>;<br>
&nbsp; &nbsp; &nbsp; &nbsp; </font>Владелец <font color=red>= </font>ЭлементыФормы<font color=red>.</font>ТабличноеПоле<font color=red>.</font>ТекущиеДанные<font color=red>.</font>Номенклатура<font color=red>;<br>
&nbsp; &nbsp; Иначе<br>
&nbsp; &nbsp; &nbsp; &nbsp; </font>Штрихкод <font color=red>= </font>ЭлементыФормы<font color=red>.</font>ТабличноеПоле<font color=red>.</font>ТекущиеДанные<font color=red>.</font>Номенклатура<font color=red>;<br>
&nbsp; &nbsp; &nbsp; &nbsp; </font>Владелец <font color=red>= </font>ЭлементыФормы<font color=red>.</font>ТабличноеПоле<font color=red>.</font>ТекущаяСтрока<font color=red>.</font>Родитель<font color=red>.</font>Номенклатура<font color=red>;<br>
&nbsp; &nbsp; КонецЕсли;<br>
<br>
&nbsp; &nbsp; </font>МенеджерЗаписи <font color=red>= </font>РегистрыСведений<font color=red>.</font>Штрихкоды<font color=red>.</font>СоздатьМенеджерЗаписи<font color=red>();<br>
&nbsp; &nbsp; </font>МенеджерЗаписи<font color=red>.</font>Штрихкод <font color=red>= </font>Штрихкод<font color=red>;<br>
&nbsp; &nbsp; </font>МенеджерЗаписи<font color=red>.</font>Владелец <font color=red>= </font>Владелец<font color=red>;<br>
&nbsp; &nbsp; </font>МенеджерЗаписи<font color=red>.</font>ТипШтрихкода <font color=red>= </font>ПланыВидовХарактеристик<font color=red>.</font>ТипыШтрихкодов<font color=red>.</font>EAN13<font color=red>;<br>
&nbsp; &nbsp; </font>МенеджерЗаписи<font color=red>.</font>ЕдиницаИзмерения <font color=red>= </font>Владелец<font color=red>.</font>ЕдиницаХраненияОстатков<font color=red>;<br>
&nbsp; &nbsp; </font>МенеджерЗаписи<font color=red>.</font>Качество <font color=red>= </font>Справочники<font color=red>.</font>Качество<font color=red>.</font>Новый<font color=red>;<br>
&nbsp; &nbsp; </font>МенеджерЗаписи<font color=red>.</font>Прочитать<font color=red>();<br>
&nbsp; &nbsp; </font>МенеджерЗаписи<font color=red>.</font>Удалить<font color=red>();<br>
</font></p>


<p>Остался последний самый простой пункт. Я думаю тут даже код не нужен. Все и так просто. Делаем отбор в наборе и записываем не читая. Вот такая получилась обработка. Почти весь нужный код для работы обработки в этой статье есть. За бортом осталась косметика, украшательства и тд, то, что каждый настраивает по своему вкусу, но если все таки у вас не вышло собрать обработку, то обработку можно <a href="http://infostart.ru/public/200131/">скачать на инфостарте</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Печать этикеток из поступления только отмеченной номенклатуры]]></title>
    <link href="http://developer1c.ru/blog/2012/09/23/piechat%27-etikietok-iz-postuplieniia-tol%27ko-otmiechiennoi-nomienklatury/"/>
    <updated>2012-09-23T20:53:00-07:00</updated>
    <id>http://developer1c.ru/blog/2012/09/23/piechat&#8217;-etikietok-iz-postuplieniia-tol&#8217;ko-otmiechiennoi-nomienklatury</id>
    <content type="html"><![CDATA[<p>Попросил как то меня клиент, &#8220;А можно мне галочку в табличную часть документа поступления, что бы можно было печатать этикетки только у определенной номенклатуры, а не для всех 2000 позиций которые пришли с этим поступлением?&#8221; Да не вопрос, 5 минут и готово! Ответил я и закатав рукава, приступил к работе, оказалость что я не учел несколько деталей&#8230;<!-- more --></p>

<h3>Что было упущено?</h3>

<p>Реквизит в табличную часть документа добавлять нельзя, так как установка флажка изменяет табличную часть, то форма получает признак модифицированности и постоянные вопросы о необходимости сохранять документ, немного нервируют пользователя(а если документ большой и проведенный, то процедура сохранения, еще и какое то время занимает) в целом это можно было бы и пережить(можно и признак модифицированности скидывать), но клиент мириться с этим не захотел, а так как если при печати все равно придется анализировать табличное поле, было решено сделать колонку не связанную с данными табличной части. В результате анализа ситуации стало ясно следующее:</p>

<ol>
<li><p>Если данные не хранятся в табличной части, то придется самому позаботится о том где мы будеи держать информацию об отмеченных строках.</p></li>
<li><p>Механизм отрисовки флажка тоже придется взять на себя.</p></li>
</ol>


<p>Как обычно прежде чем начинать городить велосипед, был сделан запрос к <a href="http://www.forum.mista.ru" title="миста">базе знаний</a> и выяснено следующее: для моего случая уже есть описанный случай на ИТС и называется он <code>Реализация отметки строк флажками в табличном поле</code>. Раз есть готовый код, то берем его, модифицируем, используем. Итак поехали:</p>

<h3>Реализация отметок в табличном поле</h3>

<p>Для начала, надо добавить колонку в табличное поле и нужно указать, что элемент управления - флажок, ну и название придумать какое нибудь. Теперь надо позаботится об объекте где будут храниться данные об наших отметках. Это будет переменная и называться она будет <code>СписокОтметок</code>, так и объявим в начале модуля:
<code>Перем СписокОтметок;</code>
в конце где выполняется код при открытии модуля (если не понимаете о чем я просто поставьте самой последней строкой) укажем тип нашей переменной: <code>СписокОтметок = Новый Соответствие</code>.</p>

<p>Теперь надо организовать изменение этого списка, когда пользователь щелкает по флажку в табличной части, для этого подойдет событие табличного поля <code>ПриИзмененииФлажка</code>, в нем нам надо указать следующее:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Процедура ТоварыПриИзмененииФлажка(Элемент, Колонка)
</span><span class='line'>  Если Колонка.Имя = "Отметка" Тогда
</span><span class='line'>      Если СписокОтметок[Элемент.ТекущаяСтрока] = Неопределено Тогда
</span><span class='line'>          СписокОтметок[Элемент.ТекущаяСтрока] = Истина;
</span><span class='line'>      Иначе
</span><span class='line'>          СписокОтметок.Удалить(Элемент.ТекущаяСтрока);
</span><span class='line'>      КонецЕсли;
</span><span class='line'>  КонецЕсли;
</span><span class='line'>КонецПроцедуры</span></code></pre></td></tr></table></div></figure>


<p>Что здесь происходит: когда пользователь щелкает по флажку, процедура ищет нужную строку табличной части и если ее нет, то добавляет, если есть удалет, таким образом, осуществляя изменение состояния флажка.</p>

<p>Теперь нужно организовать вывод флажков в табличное поле, на текущий момент юзер не видит установленных флажков в табличном поле. Для работы с выводом, нужно использовать событие <code>ПриВыводеСтроки</code> вот такой код используется для вывода флажка:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ОформлениеСтроки.Ячейки.Отметка.ОтображатьФлажок = Истина;
</span><span class='line'>Если СписокОтметок[ДанныеСтроки] = Неопределено Тогда
</span><span class='line'>  ОформлениеСтроки.Ячейки.Отметка.Флажок = Ложь;
</span><span class='line'>Иначе
</span><span class='line'>  ОформлениеСтроки.Ячейки.Отметка.Флажок = Истина;
</span><span class='line'>КонецЕсли;</span></code></pre></td></tr></table></div></figure>


<p>Тут все тоже очень просто: если текущая строка есть в списке отметок мы ее отметим если нету, не будем. Таким образом у нас есть список тех строк табличной части документов, которые были отмечены.</p>

<h3>Передача отмеченных строк в обработку печати этикеток</h3>

<p>Для того, что бы передать список номенклатуры, в обработку печати этикеток, я нашел два варианта, это передать ссылку на группу или ссылку на номенклатуру. Или что бы со списком было бы еще количество, можно передать ссылку на документ. Нам не подходит не первое, не второе. Так как нам нужно и количество и определенный список. Поэтому я немного переделал процедуру печати этикеток <code>НапечататьЭтикеткиИзДокумента</code>, которая формирует из ссылки на табличную часть документа, таблицу товары, которую принимает обработка печати этикеток. Для начала я выгрузил в таблицу значений отмеченные значения, загрузил ее во временную таблицу в запросе.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>МВТ = Новый МенеджерВременныхТаблиц;
</span><span class='line'>ТаблицаИзДока = Новый Запрос;
</span><span class='line'>ТаблицаИзДока.МенеджерВременныхТаблиц = МВТ;
</span><span class='line'>ТаблицаИзДока.Текст = 
</span><span class='line'>  "Выбрать
</span><span class='line'>  |Таблица.Номенклатура,
</span><span class='line'>  |Таблица.Количество,
</span><span class='line'>  |Таблица.ЕдиницаИзмерения,
</span><span class='line'>  |ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
</span><span class='line'>  |ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
</span><span class='line'>  |ЗНАЧЕНИЕ(Справочник.Качество.Новый) КАК Качество,
</span><span class='line'>  |0 КАК Цена
</span><span class='line'>  |ПОМЕСТИТЬ ТаблицаИЗДока
</span><span class='line'>  |ИЗ
</span><span class='line'>  |&ТаблицаСДанными КАК Таблица";
</span><span class='line'>ТаблицаИзДока.УстановитьПараметр("ТаблицаСДанными", ТабличкаИЗДокумента);
</span><span class='line'>ТаблицаИзДока.Выполнить();</span></code></pre></td></tr></table></div></figure>


<p>Полученную временную таблицу я передал в запрос, выбирающий данные из регистра штрихкодов:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Запрос = Новый Запрос;
</span><span class='line'>Запрос.МенеджерВременныхТаблиц = МВТ;
</span><span class='line'>Запрос.Текст =
</span><span class='line'>  "ВЫБРАТЬ
</span><span class='line'>  |   Док.Номенклатура КАК Номенклатура,
</span><span class='line'>  |   Док.Количество КАК Количество,
</span><span class='line'>  |   Док.Характеристика КАК Характеристика,
</span><span class='line'>  |   Док.Серия КАК Серия,
</span><span class='line'>  |   Док.Качество КАК Качество,
</span><span class='line'>  |   Док.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
</span><span class='line'>  |   Док.Цена КАК Цена,
</span><span class='line'>  |   РегШК.ТипШтрихкода КАК ТипШтрихкода,
</span><span class='line'>  |   РегШК.Штрихкод КАК Штрихкод
</span><span class='line'>  |ИЗ
</span><span class='line'>  |   ТаблицаИЗДока КАК Док
</span><span class='line'>  |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК РегШК
</span><span class='line'>  |       ПО (РегШК.Владелец = Док.Номенклатура)
</span><span class='line'>  |           И (РегШК.ЕдиницаИзмерения = Док.ЕдиницаИзмерения)
</span><span class='line'>  |           И (РегШК.ХарактеристикаНоменклатуры = Док.Характеристика)
</span><span class='line'>  |           И (РегШК.СерияНоменклатуры = Док.Серия)
</span><span class='line'>  |           И (РегШК.Качество = Док.Качество)";</span></code></pre></td></tr></table></div></figure>


<p>после этого остается только напечатать этикетки</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ЗаполнениеДокументов.ПечатьЭтикеток(Запрос.Выполнить().Выгрузить());</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Лето закончилось...]]></title>
    <link href="http://developer1c.ru/blog/2012/09/19/lieto-zakonchilos%27-dot-dot-dot/"/>
    <updated>2012-09-19T00:33:00-07:00</updated>
    <id>http://developer1c.ru/blog/2012/09/19/lieto-zakonchilos&#8217;-dot-dot-dot</id>
    <content type="html"><![CDATA[<iframe width="960" height="720" src="http://www.youtube.com/embed/RpanUnEVCrk" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Подключение сканера штрихкодов к 1С]]></title>
    <link href="http://developer1c.ru/blog/2012/09/18/podkliuchieniie-skaniera-shtrikhkodov-k-1s/"/>
    <updated>2012-09-18T23:11:00-07:00</updated>
    <id>http://developer1c.ru/blog/2012/09/18/podkliuchieniie-skaniera-shtrikhkodov-k-1s</id>
    <content type="html"><![CDATA[<h2>Подключение сканера метролоджик ms 5145 к 1С Управление торговлей.</h2>

<p>Для того что бы разобраться с подключением сканера, нужно понимать, как все работает и какие бывают режимы, что касается ms5145 то это USB сканер который начинает работать сразу после подключения к компьютеру. <!-- more -->Если после подключения открыть блокнот и отсканировать штрихкод, то мы в блокноте увидим код который обозначает этот штрихкод, как будто мы набрали его на клавиатуре. То есть он работает сразу из коробки. Итак нам надо что бы сканер работал в 1С. При использовании сканера работает следующая схема: при сканировании штрихкод перехватывет драйвер и передает в 1С. Это специальный драйвер который сделан для того что бы перехватывать события сканирования, не путайте с драйвером самого сканера. В целом схему взаимодействия сканера и 1С можно изобразить так:
<img src="http://26226.selcdn.ru/1c_dev_files/shema.png">
При настройке сканера в 1С нужно указать com  порт (настройки мы рассмотрим внимательно чуть позже) а у нас сканер работает как клавиатура. Вариантов у нас несколько.
1. Использование режима ввода с клавитуры. Перед сканированием в окне подбора, в документе ЧЕКККМ, Реализация товаров и услуг, нажать F7 и отсканировать штрихкод. Штрихкод отсканируется и сам нажмет ОК. Как будто это вы сами набрали штрихкод с клавиатуры.</p>

<ol>
<li><p>Использование старого драйвера Атол. Драйвер Атол платный и стоит нормальных денег, бесплатно он сканирует с 10ти секундной задержкой. Можно поискать в инете бесплатную версию DTO6_2009_02_11, при установке этого драйвера в списке ком портов появляется пункт клавиатура  указываем его и все ок, поиск по штрихкоду происходит при сканировании штрихкода без лишних движений.</p></li>
<li><p>Перевод сканера в режим эмуляции com порта для перевода. Если перевести сканер в режим эмуляции com порта то он будет делать вид, что подключен через com порт, который ура! можно подсунуть  стандартному драйверу от 1С. Для того, что бы перевести сканер в такой режим, надо отсканировать штрихкод из книжечки которая шла вместе со сканером, если книжечки нет ее можно скачать <a href="http://www.honeywellaidc.com/en-us/pages/Product.aspx?category=Laser&amp;cat=HSM&amp;pid=5145">на офицальном сайте</a> и распечатать нужную страницу из руководства. После того как вы отсканируете код, сканер переключится на режим эмуляции ком порта, система найдет новое устройство и запросит драйвера, их можно взять с офф сайта по вышеприведенной ссылке или скачать <a href="http://26226.selcdn.ru/1c_dev_files/files/drv_metrolologik.zip">мою подборку</a>, откуда она собралась я уже не помню. Но она меня выручала не раз. Указываете путь к драйверу и у вас в системе новый ком порт, все можно его использовать. После этого вам нужно установить драйвер, который будет передавать штрихкод в программу 1С, здесь подойдет любой  драйвер штрихкода от фирмы 1С. Они все умеют перехватывать события от com порта. В случае если у вас сервер терминалов, то у каждого клиента, должен быть свой уникальный com порт, то есть у двух пользователей подключенных к одному серверу терминалов, сканеры должны висеть на разных com портах иначе сканер будет работать только у кого то одного.</p></li>
<li><p>С 29.02.12 стадартный драйвер 1С версии 8.0.12.2 (на текущий момент акутальная версия 8.0.14.1 любая версия легко гуглится по версии драйвера например вот так <a href="http://goo.gl/poGiF">Scan_OPOS_8_0_14_1.rar</a> умеет работать с клавиатурными сканерами без танцев-бубнов, переключений в режим эмуляции и тд. После установки драйвера в списке com портов наблюдаем пункт клавиатура, который собственно и отрабатывает событие считывание штрихкода, сканером в режиме клавиатуры. Похоже это самое удобный способ.</p></li>
</ol>


<p>Перейдем к настройке сканера, настройка сканера происходит в меню Сервис -> Торговое оборудование -> Подключение и настройка торгового оборудования перейдем на закладку сканеры штрихкода там добавляем строку, открывается справочник торговое оборудование, здесь надо добавить наш сканер, указываем любое название и обработку обслуживания, если вы устанавливали конфигурацию, то ее можно взять в каталоге с шаблонами TradeWareEpf, где то здесь: C:\Users\admin\AppData\Roaming\1C\1Cv82\tmplts\1c\Retail\Номер<em>Релиза</em>Конфигурации если не устанавливали, то ищите на диске ИТС, если нет диска ИТС, придется его скачать или загуглить. Потом, указываем порт скорость и другие настройки com порта из диспетчера задач. Собственно все. Буду рад ответить на ваши вопросы в коментариях. Так же тут можно поклянчить обработки обслуживания торгового оборудования.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Программное расположение элементов на форме]]></title>
    <link href="http://developer1c.ru/blog/2012/09/07/proghrammnoie-raspolozhieniie-eliemientov-na-formie/"/>
    <updated>2012-09-07T00:13:00-07:00</updated>
    <id>http://developer1c.ru/blog/2012/09/07/proghrammnoie-raspolozhieniie-eliemientov-na-formie</id>
    <content type="html"><![CDATA[<p>Иногда есть необходимость расположить табличное поле на форме программно, например когда нужно добавить неизвестное заранее количество закладок, хорошо если нужно просто добавить закладки, тогда можно просто отделаться :<!-- more --></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ЭлементыФормы.ПанельСЗакладками.Страницы.Добавить("ЗакладкаСклад"+Склад.НомерСклада, Склад.Наименование);</span></code></pre></td></tr></table></div></figure>


<p>но на закладках должно, что то располагаться и это что то, должно иметь размеры, располагаться в конкретно указанном месте у него,  у него должны быть привязки, определены какие то свойства(которых прошу заметить может быть много) и тд, конечно самый логичный способ это нарисовать образец на форме а потом смотря свойства, просто это все перетащить. Должен получиться какой то такой код:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ЭлементыФормы.ПанельСЗакладками.Страницы.Добавить("ЗакладкаСклад"+Склад.НомерСклада, Склад.Наименование);
</span><span class='line'>ЭлементыФормы.ПанельСЗакладками.ТекущаяСтраница = ЭлементыФормы.ПанельСЗакладками.Страницы["ЗакладкаСклад"+Склад.НомерСклада];
</span><span class='line'>ТабличноеПоле = ЭлементыФормы.Добавить(Тип("ТабличноеПоле"),"ТабличноеПоле"+Склад.НомерСклада,Истина,ЭлементыФормы.ПанельСЗакладками);
</span><span class='line'>ТабличноеПоле.Имя = "ТабличноеПоле"+Склад.НомерСклада;
</span><span class='line'>ТабличноеПоле.Значение = ДвиженияПоСкладам[ТекущийСклад];
</span><span class='line'>ТабличноеПоле.Верх = 6;
</span><span class='line'>ТабличноеПоле.Высота = 566;
</span><span class='line'>ТабличноеПоле.Ширина = 747;
</span><span class='line'>ТабличноеПоле.Лево = 6;
</span><span class='line'>ТабличноеПоле.ВертикальнаяПолосаПрокрутки = ИспользованиеПолосыПрокрутки.Использоватьавтоматически;
</span><span class='line'>ТабличноеПоле.Вывод = ИспользованиеВывода.Авто;
</span><span class='line'>ТабличноеПоле.ВысотаПодвала = 1;
</span><span class='line'>ТабличноеПоле.ВысотаШапки = 1;
</span><span class='line'>ТабличноеПоле.ГоризонтальнаяПолосаПрокрутки = ИспользованиеПолосыПрокрутки.Использоватьавтоматически;
</span><span class='line'>ТабличноеПоле.ГоризонтальныеЛинии = Истина;
</span><span class='line'>ТабличноеПоле.ПорядокОтображения = 1;
</span><span class='line'>ТабличноеПоле.УстановитьПривязку(ГраницаЭлементаУправления.Низ,ЭтаФорма.Панель,ГраницаЭлементаУправления.Низ);
</span><span class='line'>ТабличноеПоле.УстановитьПривязку(ГраницаЭлементаУправления.Право,ЭтаФорма.Панель,ГраницаЭлементаУправления.Право);
</span><span class='line'>ТабличноеПоле.ТолькоПросмотр = Ложь;</span></code></pre></td></tr></table></div></figure>


<p>&nbsp;&nbsp;&nbsp;&nbsp;Но тут есть один нюанс, переписывать параметры руками, это просто жесть, всегда можно, что то забыть, не учесть, не заметить, да и не всегда удается угадать какой контрол, какой содержит элемент управления, но тут падам! к нам на выручку спешит чудесная штука ДекомпиляцияИАнализФорм_4.epf делаем формочку, настраиваем поведение, размеры, стили и прочие нужности, скармливаем обработке, она генерит нам нужный код, очень приятная вешь, про автора известно что это (MRAK) Роман Ершов, больше я про него ничего не знаю, он пожелал не раскрывать деталей. Собственно на этом все а кому нужно, может скачать  <a href="http://26226.selcdn.ru/1c_dev_files/files/%D0%94%D0%B5%D0%BA%D0%BE%D0%BC%D0%BF%D0%B8%D0%BB%D1%8F%D1%86%D0%B8%D1%8F%D0%98%D0%90%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%A4%D0%BE%D1%80%D0%BC_4.epf">обработку</a> которая поможет вам в нелегких буднях 1сника</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Хранение остатков поставщика у себя в базе]]></title>
    <link href="http://developer1c.ru/blog/2012/09/06/khranieniie-ostatkov-postavshchika-u-siebia-v-bazie/"/>
    <updated>2012-09-06T15:47:00-07:00</updated>
    <id>http://developer1c.ru/blog/2012/09/06/khranieniie-ostatkov-postavshchika-u-siebia-v-bazie</id>
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;В этой статье, я хотел бы рассказать об опыте настройки хранения остатков по складу поставщика. Почему именно об этом? Потому что:<!-- more --></p>

<ol>
<li>В этом решении затрагивается механизм обработки в запросе таблицы значений. Что в целом может пригодиться.</li>
<li>Затрагивается механизм формирования таблицы движений сразу в запросе.</li>
<li>Решение имеет практическую ценность.</li>
<li>Было интересно :)</li>
</ol>


<p>Заказчиком было поставлено условие: изменение конфигурации, должно быть обоснованным и не происходить без надобности. Были найдены и рассмотрены следующие варианты:</p>

<ol>
<li>Добавление регистра в базу. Загрузка туда остатков, да и вообще всего что можно загрузить.</li>
<li>Загрузка данных из экселя (Именно в этом формате поставщик хранит свои данные) каждый раз при открытии подбора в документ отгрузки.</li>
<li>Создание нового склада, и загрузка данных туда корректирующим документом.</li>
</ol>


<p>&nbsp;&nbsp;&nbsp;&nbsp;Первые два способа подразумевают модификацию обработки подбора в документ реализации  а один из них еще и добавление регистра, что само по себе не страшно конечно, но для заказчика не желательно. А во втором случае, надо каждый раз читать эксель, что тоже не очень хорошо. После <a href="http://www.forum.mista.ru/topic.php?id=619127">консультаций с комьюнити</a>, было выяснено, что вроде как все считают, что хранить  остатки у себя в базе нельзя, но почему, никто сказать не может. Решили остановиться на третьем варианте.</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;И так что мы будем делать:
1. Загрузим из подсунутого экселя остатки поставщика
2. Подсчитаем дельту, на которую надо скорректировать остатки.
3. Создадим документ «КоорректировкаЗаписейРегистраНакопления» и в него зальем движения.
И так: Читаем эксель в таблицу значений.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Функция ПрочитатьЭксель()
</span><span class='line'>  КСАртикул = Новый КвалификаторыСтроки(25);
</span><span class='line'>  Массив = Новый Массив;
</span><span class='line'>  Массив.Добавить(Тип("Строка"));
</span><span class='line'>  ОписаниеТиповАртикул = Новый ОписаниеТипов(Массив, , КСАртикул);   
</span><span class='line'>  
</span><span class='line'>  Массив.Очистить();
</span><span class='line'>  КЧ = Новый КвалификаторыЧисла(10);
</span><span class='line'>  Массив.Добавить(Тип("Число"));
</span><span class='line'>  ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);    
</span><span class='line'>  
</span><span class='line'>  ТЗ = Новый ТаблицаЗначений;
</span><span class='line'>  ТЗ.Колонки.Добавить("Артикул", ОписаниеТиповАртикул);
</span><span class='line'>  ТЗ.Колонки.Добавить("Количество", ОписаниеТиповЧ);
</span><span class='line'>  
</span><span class='line'>  Попытка
</span><span class='line'>      Excel = Новый COMОбъект("Excel.Application");
</span><span class='line'>      //Excel.WorkBooks.Open("D:\Базы\НомеенклатураРулевойОбрезан.xls");
</span><span class='line'>      Excel.WorkBooks.Open(ИмяФайла);
</span><span class='line'>      Состояние("Обработка файла Microsoft Excel");
</span><span class='line'>      ExcelЛист = Excel.Sheets(1);
</span><span class='line'>  Исключение
</span><span class='line'>      Сообщить("Не удалось обработать файл!");
</span><span class='line'>      Возврат "";
</span><span class='line'>  КонецПопытки;   
</span><span class='line'>  
</span><span class='line'>  Для СтрокаЭксель = СтрокаНачало По СтрокаОкончание Цикл
</span><span class='line'>      Прогресс = (СтрокаЭксель / СтрокаОкончание) * 100;
</span><span class='line'>      ЭлементыФормы.СтрокаСтатуса.Заголовок = "Считывается эксель в память " + СтрокаЭксель + " из " + СтрокаОкончание;
</span><span class='line'>      
</span><span class='line'>      Зн = ExcelЛист.Cells(СтрокаЭксель, КолонкаАртикул).Text;
</span><span class='line'>      АртикулВДокумент = СокрЛ(ExcelЛист.Cells(СтрокаЭксель, КолонкаАртикул).Text);
</span><span class='line'>      КолвоВДокумент = СокрЛ(ExcelЛист.Cells(СтрокаЭксель, КолонкаКоличество).Text);
</span><span class='line'>      КолвоВДокумент = ?(КолвоВДокумент = "", 0, Число(КолвоВДокумент));
</span><span class='line'>      
</span><span class='line'>      НоваяСтрокаТЗ = ТЗ.Добавить();
</span><span class='line'>      НоваяСтрокаТЗ.Артикул = АртикулВДокумент;
</span><span class='line'>      НоваяСтрокаТЗ.Количество = КолвоВДокумент;
</span><span class='line'>  КонецЦикла;   
</span><span class='line'>  
</span><span class='line'>  Excel.WorkBooks.Close();
</span><span class='line'>  Excel = 0;
</span><span class='line'>  Возврат ТЗ;
</span><span class='line'>
</span><span class='line'>КонецФункции // ПрочитатьЭксель()</span></code></pre></td></tr></table></div></figure>


<p>&nbsp;&nbsp;&nbsp;&nbsp;Я читаю эксель в типизизрованную таблицу значений, потому что для обработки таблицы запросом она должна быть типизирована. На форме есть надпись с названием «СтрокаСтатуса» которая рассказывает про текущий ход загрузки данных из экселя. Так же есть поля ввода в которых лежат номера колонок где артикул номенклатуры а где количество. Здесь вроде все настолько просто, что даже не знаю что тут прокомментировать. Ну раз с первым моментом нам все ясно, перейдем к вычислению дельты которую надо грузить в регистр. Для начала, что бы обращаться к этой таблице в запросе, надо ее поместить во временную таблицу, это не очень сложно и делается с помощью вот такого кода:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ТЗЭксель = ПрочитатьЭксель();
</span><span class='line'>  
</span><span class='line'>МВТ = Новый МенеджерВременныхТаблиц;
</span><span class='line'>ТаблицаЭксель = Новый Запрос;
</span><span class='line'>ТаблицаЭксель.МенеджерВременныхТаблиц = МВТ;
</span><span class='line'>ТаблицаЭксель.Текст = 
</span><span class='line'>  "Выбрать
</span><span class='line'>  |   *
</span><span class='line'>  |ПОМЕСТИТЬ ДокЭксель
</span><span class='line'>  |ИЗ
</span><span class='line'>  |&ТаблицаСДанными КАК Таблица";
</span><span class='line'>ТаблицаЭксель.УстановитьПараметр("ТаблицаСДанными", ТЗЭксель);
</span><span class='line'>ТаблицаЭксель.Выполнить();</span></code></pre></td></tr></table></div></figure>


<p>Таблица есть, теперь перейдем к загрузке. Так как в экселе могут быть уже существующие записи или не быть тех которые есть в регистре, мы будем привязываться к справочнику номенклатура. Собственно вот он запрос:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ВЫБРАТЬ
</span><span class='line'>  ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокНаСкладе,
</span><span class='line'>  ЕСТЬNULL(ДокЭксель.Количество, 0) КАК КоличествоЭксель,
</span><span class='line'>  ВЫБОР
</span><span class='line'>      КОГДА ЕСТЬNULL(ДокЭксель.Количество, 0) - ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) &lt; 0
</span><span class='line'>          ТОГДА 0 - (ЕСТЬNULL(ДокЭксель.Количество, 0) - ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0))
</span><span class='line'>      ИНАЧЕ ЕСТЬNULL(ДокЭксель.Количество, 0) - ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0)
</span><span class='line'>  КОНЕЦ КАК Количество,
</span><span class='line'>  &Склад,
</span><span class='line'>  Товар.Ссылка КАК Номенклатура,
</span><span class='line'>  ЗНАЧЕНИЕ(Справочник.Качество.Новый) КАК Качество,
</span><span class='line'>  ВЫБОР
</span><span class='line'>      КОГДА ЕСТЬNULL(ДокЭксель.Количество, 0) - ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) > 0
</span><span class='line'>          ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
</span><span class='line'>      ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
</span><span class='line'>  КОНЕЦ КАК ВидДвижения,
</span><span class='line'>  ИСТИНА КАК Активность,
</span><span class='line'>  &Период,
</span><span class='line'>  &Док КАК Регистратор
</span><span class='line'>ИЗ
</span><span class='line'>  Справочник.Номенклатура КАК Товар
</span><span class='line'>      ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(, Склад = &Склад) КАК ТоварыНаСкладахОстатки
</span><span class='line'>      ПО Товар.Ссылка = ТоварыНаСкладахОстатки.Номенклатура
</span><span class='line'>      ЛЕВОЕ СОЕДИНЕНИЕ ДокЭксель КАК ДокЭксель
</span><span class='line'>      ПО Товар.Артикул = ДокЭксель.Артикул
</span><span class='line'>ГДЕ
</span><span class='line'>  Товар.Артикул &lt;> ""</span></code></pre></td></tr></table></div></figure>


<p>Не забываем, что для того что бы обратиться к временной таблице, нам надо указать менеджер временных таблиц:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Запрос.МенеджерВременныхТаблиц = МВТ;</span></code></pre></td></tr></table></div></figure>


<p>ЕСТЬNULL нам гарантирует возврат числа в случае работы соединений, разницу мы получаем в строках с 4 по 8, строки с 9й по 19ю формируют значения для загрузки данных в регистр, собственно все почти готово. Осталось выгрузить результат в таблицу и удалить те значения которые грузить не надо(количество = 0) :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ДвиженияВДокумент = Запрос.Выполнить().Выгрузить();//"Склад,Номенклатура,Качество,Количество"
</span><span class='line'>НулевыеДвижения = ДвиженияВДокумент.НайтиСтроки(Новый Структура("Количество",0));
</span><span class='line'>Для Каждого СтрокаТаблицы Из НулевыеДвижения Цикл
</span><span class='line'>  ДвиженияВДокумент.Удалить(СтрокаТаблицы);
</span><span class='line'>КонецЦикла;</span></code></pre></td></tr></table></div></figure>


<p>Создать документ корректировки и добавить строку в ТЧ которая укажет на регистр, это нужно для отображения документа и обеспечения возможности его редактировать.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>НовыйДок = Документы.КорректировкаЗаписейРегистров.СоздатьДокумент();
</span><span class='line'>НовыйДок.Дата = ТекущаяДата();
</span><span class='line'>СтрокаТЧ = НовыйДок.ТаблицаРегистровНакопления.Добавить();
</span><span class='line'>СтрокаТЧ.Имя = "ТоварыНаСкладах";
</span><span class='line'>СтрокаТЧ.Представление = "Товары на складах";
</span><span class='line'>НовыйДок.Записать();
</span><span class='line'>НовыйДок = НовыйДок.Ссылка;</span></code></pre></td></tr></table></div></figure>


<p>И собственно загрузить данные в регистр</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>НаборВРегистр = РегистрыНакопления.ТоварыНаСкладах.СоздатьНаборЗаписей();
</span><span class='line'>НаборВРегистр.Отбор.Регистратор.Значение = НовыйДок;
</span><span class='line'>НаборВРегистр.Загрузить(ДвиженияВДокумент.Скопировать(,"Период,Регистратор,Активность,ВидДвижения,Склад,Номенклатура,Качество,Количество"));
</span><span class='line'>ЫНаборВРегистр.Записать();</span></code></pre></td></tr></table></div></figure>


<p>&nbsp;&nbsp;&nbsp;&nbsp;Как вы могли заметить документ мы уже не трогаем, его не надо, не записывать, не проводить, он просто является основанием для записи в регистр.
Собственно на этом все, внимательный читатель наверняка уже нашел ошибку а вы? ;)
Как обычно для тех кто дочитал или прокрутил до конца как обычно бонус: <a href="http://26226.selcdn.ru/1c_dev_files/files/%D0%97%D0%B0%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D0%B0%D0%92%D0%9D%D0%BE%D0%B2%D1%8B%D0%B9%D0%A1%D0%BA%D0%BB%D0%B0%D0%B4.epf">Обработка про которую я рассказывал в этом посте</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Основные моменты при работе с СКД]]></title>
    <link href="http://developer1c.ru/blog/2012/09/05/osnovnyie-momienty-pri-rabotie-s-skd/"/>
    <updated>2012-09-05T21:09:00-07:00</updated>
    <id>http://developer1c.ru/blog/2012/09/05/osnovnyie-momienty-pri-rabotie-s-skd</id>
    <content type="html"><![CDATA[<p>В данном топике я хотел бы затронуть, некоторые моменты работы с СКД: работа с формой отчета, использование нескольких схем компоновки данных, работа с параметрами и так по мелочи, что накопилось за время использования СКД. Итак:<!-- more --></p>

<h2>Как использовать параметры в СКД?</h2>

<p>При написании отчета для СКД иногда возникает потребность в использовании параметров, какие есть варианты? Для начала надо определиться что для того что бы параметры стали доступными, необходимо поставить галочку в схеме вот здесь:
<img src="http://26226.selcdn.ru/1c_dev_files/pict_004.png"></p>

<ol>
<li>Тыкнуть по кнопочке настройки, и задать настройки на стандартной форме. Мы этот вариант даже рассматривать не будем, по той простой причине, что их видно на стандартной форме невооруженным глазом, достаточно тыкнуть на кнопку&#8230; Настройки конечно же.</li>
<li>Сделать таблицу на форме и указать у нее источник.</li>
<li>Добавить на форму отчета поля ввода и прописать изменение параметров СКД при их изменении</li>
</ol>


<p>Рассмотрим  все варианты по подробнее.</p>

<h3>2. Вывод всех прописанных настроек в одной таблице</h3>

<p>Это делается очень просто, добавляется таблица значений на форму а источником данных нужно указать: ОтчетОбъект -> КомпоновщикНастроек -> Настройки -> Параметры данных.</p>

<h3>3. Вынесение параметров отчета на форму, как правило самый нужный и удобный метод установки параметров.</h3>

<p>Для этого создадим форму отчета, если вы ее еще не создали (куда то, нам надо вынести параметры которые мы будем передавать в СКД) и добавим поле ввода нужного нам типа. И в событии &#8220;ПриИзменении&#8221; укажем следующий код:</p>

<figure class='code'><figcaption><span>ПриИзменении </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
</span><span class='line'>Параметр = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПараметрУказанныйВЗапросе"));
</span><span class='line'>Если Параметр &lt;> Неопределено Тогда
</span><span class='line'>  Параметр.Значение = ЗначениеКотороеМыХотимУстановить;
</span><span class='line'>  Параметр.Использование = Истина;
</span><span class='line'>КонецЕсли;</span></code></pre></td></tr></table></div></figure>


<p>Готово! Теперь при изменении элемента на форме параметр будет автоматически загружаться в СКД.</p>

<h2>Использование нескольких схем</h2>

<p>Периодически бывает что один отчет должен показывать вроде бы одну и ту же информацию но в разрезе разных показателей. И вроде отчет тот же, только сменился тип аналитики, или убрали колонку, которая участвовала в расчетах, но &#8220;почти&#8221; это для пользователя, для разработчика это уже другой набор полей и уже скорее всего структура другая, вообщем необходимо делать другой отчет, но можно просто использовать несколько схем и переключаться между ними по мере надобности. Переключаться между схемами несложно, достаточно сделать кнопочку повешать на нее следующую процедуру:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Процедура СменитьСхему()
</span><span class='line'>  СхемаКомпоновкиДанных = ПолучитьМакет("ЗдесьНадоУказатьИмяСхемы");
</span><span class='line'>  Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
</span><span class='line'>  КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
</span><span class='line'>КонецПроцедуры</span></code></pre></td></tr></table></div></figure>


<p>Как видите, все просто, при желании можно сократить до двух строк или даже одной, но не уверен, что это пойдет на пользу читаемости кода. Но тут есть свой нюанс, при загрузке новых настроек старые параметры сотрутся, что на самом деле логично, но нас такое положение дел совершенно не устраивает. Какой из этого есть выход? Я думаю надо перед сменой компоновки параметры, надо сохранить в какой то буфер, а потом их восстановить. Как получить\записать параметр я уже говорил выше и не буду на это останавливаться. Так как параметров как правило больше чем два, особенно если это сложный отчет, то неправильно будет, писать</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Параметр1 = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПараметрУказанныйВЗапросе"));
</span><span class='line'>СохраненноеЗначение1 = Параметр1.Значение;
</span><span class='line'>
</span><span class='line'>Параметр2 = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПараметрУказанныйВЗапросе2"));
</span><span class='line'>СохраненноеЗначение2 = Параметр2.Значение;
</span><span class='line'>
</span><span class='line'>...//смена схемы компоновки
</span><span class='line'>
</span><span class='line'>Параметр1 = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПараметрУказанныйВЗапросе"));
</span><span class='line'>Параметр1.Значение = СохраненноеЗначение1;
</span><span class='line'>Параметр1.Использование = Истина;
</span><span class='line'>
</span><span class='line'>Параметр2 = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПараметрУказанныйВЗапросе2"));
</span><span class='line'>Параметр2.Значение = СохраненноеЗначение2;
</span><span class='line'>Параметр2.Использование = Истина;
</span><span class='line'>//и тд</span></code></pre></td></tr></table></div></figure>


<p>Я надеюсь, что вы понимаете, что этот код написан для примера и не стоит использовать перемнные с именами &#8220;СохраненноеЗначение1&#8221;,&#8221;СохраненноеЗначение2&#8221;, но даже если не понимаете, все равно не используйте.
Надо бы указать: СохраниСписокПараметров(&#8220;ЗдесьСписокПараметров&#8221;); потом сменить схему и сделать ВосстановиСписокПараметров(&#8220;ЗдесьСписокПараметров&#8221;); Этим мы и займемся, для этого далее я напишу эти две процедуры, одна будет сохранять параметры в спецально для этого отведнную структуру, другая будет из нее восстанавливать параметры. Вот они:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Функция СохранитьПараметры(ИменаПараметров)
</span><span class='line'>  Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
</span><span class='line'>  МассивСИменами = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ИменаПараметров,",");
</span><span class='line'>  СтруктураДляПараметров = Новый Структура;
</span><span class='line'>  Для Каждого ИмяПараметра Из МассивСИменами Цикл
</span><span class='line'>      Параметр = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ИмяПараметра));
</span><span class='line'>      Если Параметр &lt;> Неопределено Тогда
</span><span class='line'>          СтруктураДляПараметров.Вставить(ИмяПараметра, Параметр.Значение);
</span><span class='line'>      КонецЕсли; 
</span><span class='line'>  КонецЦикла;   
</span><span class='line'>  
</span><span class='line'>  Возврат СтруктураДляПараметров;
</span><span class='line'>КонецФункции
</span><span class='line'>
</span><span class='line'>Процедура ЗагрузитьПараметры(СтруктураСПараметрами)
</span><span class='line'>  Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
</span><span class='line'>    Для Каждого ТекущийПараметр Из СтруктураСПараметрами Цикл
</span><span class='line'>      Параметр = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ТекущийПараметр.Ключ));
</span><span class='line'>      Если Параметр &lt;> Неопределено Тогда
</span><span class='line'>          Параметр.Значение = ТекущийПараметр.Значение;
</span><span class='line'>          Параметр.Использование = Истина;
</span><span class='line'>      КонецЕсли; 
</span><span class='line'>  КонецЦикла;   
</span><span class='line'>КонецПроцедуры</span></code></pre></td></tr></table></div></figure>


<p>Остановлюсь, что бы более подробно объяснить, что происходит. Функция СохранитьПараметры принимает на входе строку с именами тех параметров которые надо сохранить. Затем в строке 6 она находит по имени нужный параметр и сохраняет в структуру, которую возвращает по окончании перебора всех параметров полученых из строки. То же самое, только наоборот делает процедура загрузить, она принимает структуру и загружает из нее в СКД параметры. Далее надо собрать все вместе, выглядеть это будет примерно так:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Функция СохранитьПараметры(ИменаПараметров)
</span><span class='line'>  Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
</span><span class='line'>  МассивСИменами = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ИменаПараметров,",");
</span><span class='line'>  СтруктураДляПараметров = Новый Структура;
</span><span class='line'>  Для Каждого ИмяПараметра Из МассивСИменами Цикл
</span><span class='line'>      Параметр = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ИмяПараметра));
</span><span class='line'>      Если Параметр &lt;> Неопределено Тогда
</span><span class='line'>          СтруктураДляПараметров.Вставить(ИмяПараметра, Параметр.Значение);
</span><span class='line'>      КонецЕсли; 
</span><span class='line'>  КонецЦикла;   
</span><span class='line'>  
</span><span class='line'>  Возврат СтруктураДляПараметров;
</span><span class='line'>КонецФункции
</span><span class='line'>
</span><span class='line'>Процедура ЗагрузитьПараметры(СтруктураСПараметрами)
</span><span class='line'>  Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
</span><span class='line'>    Для Каждого ТекущийПараметр Из СтруктураСПараметрами Цикл
</span><span class='line'>      Параметр = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ТекущийПараметр.Ключ));
</span><span class='line'>      Если Параметр &lt;> Неопределено Тогда
</span><span class='line'>          Параметр.Значение = ТекущийПараметр.Значение;
</span><span class='line'>          Параметр.Использование = Истина;
</span><span class='line'>      КонецЕсли; 
</span><span class='line'>  КонецЦикла;   
</span><span class='line'>КонецПроцедуры
</span><span class='line'> 
</span><span class='line'>Процедура СменитьСхему()
</span><span class='line'>  СтруктураСНастройками = СохранитьПараметры("Параметр1,Параметр2,Параметр3");
</span><span class='line'>  СхемаКомпоновкиДанных = ПолучитьМакет("ЗдесьИмяНужнойВамСхемы");
</span><span class='line'>  Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
</span><span class='line'>  КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
</span><span class='line'>  ЗагрузитьПараметры(СтруктураСНастройками);
</span><span class='line'>КонецПроцедуры</span></code></pre></td></tr></table></div></figure>


<h2>Вывод СКД в отчет</h2>

<p>Если вы создали форму отчета у СКД(то есть если у вас отчет и есть схема компоновки данных), то по умолчанию на кнопке &#8220;Сформировать&#8221; висит предустанновленная команда &#8220;Сфрмировать&#8221;, которая запустит текущую схему, но можно туда повесить свой обработчик, если нужно перед формированием сделать какие нибудь манипуляции, вот код который можно туда повесить:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>КомпоновщикМакета=Новый КомпоновщикМакетаКомпоновкиДанных;
</span><span class='line'>МакетКомпоновкиДанных=КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,КомпоновщикНастроек.Настройки,ДанныеРасшифровки);
</span><span class='line'>ПроцессорКомпоновкиДанных=Новый ПроцессорКомпоновкиДанных;
</span><span class='line'>ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных,,ДанныеРасшифровки,Истина);
</span><span class='line'>ПроцессорВывода=Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
</span><span class='line'>ПроцессорВывода.УстановитьДокумент(ЭлементыФормы.Результат);
</span><span class='line'>ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);</span></code></pre></td></tr></table></div></figure>


<p>например перед формированием отчета, можно установить заголовок, в зависимости от установленных параметров или свернуть группировки после формирования, или время там формирования засечь, всякое бывает. Также можно вывести разом, а можно управлять выводом, посмотреть детали можно в синтаксис помощнике по адресу Общие объекты -> Система компоновки данных -> Работа с механизмом -> ПроцессорВыводаРезультатаКомпоновкиДанных</p>

<h3>Установка в качестве параметра списка значений.</h3>

<p>Когда нужно использовать список значений, для параметра необходимо установить галочку &#8220;Доступен список значений&#8221; иначе, даже если на входе будет список, СКД все равно будет брать только первое значение, галочка вот здесь:
<img src="http://26226.selcdn.ru/1c_dev_files/pict_003.png">
С этой галочкой в штатном списке параметров СКД, вы бонусом получаете красивый и удобный список для подбора ваших значений.</p>

<h3>Вывод СКД в таблицу.</h3>

<p>Бывает нужен, если нужно проанализировать или что то сделать с результатами работы, что бы получить результат работы  СКД в таблицу значений или в дерево значений, вам поможет следующий код:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>КомпоновщикМакета=Новый КомпоновщикМакетаКомпоновкиДанных;
</span><span class='line'>МакетКомпоновкиДанных=КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,КомпоновщикНастроек.Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
</span><span class='line'>ПроцессорКомпоновкиДанных=Новый ПроцессорКомпоновкиДанных;
</span><span class='line'>ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
</span><span class='line'>  
</span><span class='line'>ТЗДляВывода = Новый ТаблицаЗначений;//здесь может быть и дерево значений
</span><span class='line'>ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
</span><span class='line'>ПроцессорВывода.УстановитьОбъект(ТЗДляВывода);
</span><span class='line'>ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);</span></code></pre></td></tr></table></div></figure>


<p>собственно здесь в ТЗДляВывода мы получаем результат формирования отчета. Собственно если не касаться непосредствнно самого СКД, то здесь описаны практически все моменты работы с формой отчета построенного на СКД.</p>

<h3>Бонусы</h3>

<p>Тому кто домучал до конца эту длинную повесть, пригодятся бонусы:
Курс от гилева про СКД, что бы не искать информацию про СКД, можно скачать <a href="http://www.spec8.ru/kurs-po-skd-besplatno">бесплатный курс по СКД</a>
Можно взять <a href="http://26226.selcdn.ru/1c_dev_files/files/%D0%A8%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD.erf">шаблон, в котором есть все нужные для оформления фичи</a></p>
]]></content>
  </entry>
  
</feed>
