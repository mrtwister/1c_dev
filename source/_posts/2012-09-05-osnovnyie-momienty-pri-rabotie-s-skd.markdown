---
layout: post
title: "Основные моменты при работе с СКД"
date: 2012-09-05 21:09
comments: true
categories: Разработка 1С 
---
В данном топике я хотел бы затронуть, некоторые моменты работы с СКД: работа с формой отчета, использование нескольких схем компоновки данных, работа с параметрами и так по мелочи, что накопилось за время использования СКД. Итак:<!-- more -->
##Как использовать параметры в СКД?
При написании отчета для СКД иногда возникает потребность в использовании параметров, какие есть варианты? Для начала надо определиться что для того что бы параметры стали доступными, необходимо поставить галочку в схеме вот здесь:
{% img http://26226.selcdn.ru/1c_dev_files/pict_004.png %}

1. Тыкнуть по кнопочке настройки, и задать настройки на стандартной форме. Мы этот вариант даже рассматривать не будем, по той простой причине, что их видно на стандартной форме невооруженным глазом, достаточно тыкнуть на кнопку... Настройки конечно же.
2. Сделать таблицу на форме и указать у нее источник.
3. Добавить на форму отчета поля ввода и прописать изменение параметров СКД при их изменении

Рассмотрим  все варианты по подробнее.
###2. Вывод всех прописанных настроек в одной таблице
Это делается очень просто, добавляется таблица значений на форму а источником данных нужно указать: ОтчетОбъект -> КомпоновщикНастроек -> Настройки -> Параметры данных.
###3. Вынесение параметров отчета на форму, как правило самый нужный и удобный метод установки параметров.
Для этого создадим форму отчета, если вы ее еще не создали (куда то, нам надо вынести параметры которые мы будем передавать в СКД) и добавим поле ввода нужного нам типа. И в событии "ПриИзменении" укажем следующий код:
{% codeblock ПриИзменении %}
Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
Параметр = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПараметрУказанныйВЗапросе"));
Если Параметр <> Неопределено Тогда
	Параметр.Значение = ЗначениеКотороеМыХотимУстановить;
	Параметр.Использование = Истина;
КонецЕсли;	
{% endcodeblock %}
Готово! Теперь при изменении элемента на форме параметр будет автоматически загружаться в СКД.
##Использование нескольких схем
Периодически бывает что один отчет должен показывать вроде бы одну и ту же информацию но в разрезе разных показателей. И вроде отчет тот же, только сменился тип аналитики, или убрали колонку, которая участвовала в расчетах, но "почти" это для пользователя, для разработчика это уже другой набор полей и уже скорее всего структура другая, вообщем необходимо делать другой отчет, но можно просто использовать несколько схем и переключаться между ними по мере надобности. Переключаться между схемами несложно, достаточно сделать кнопочку повешать на нее следующую процедуру:
{% codeblock %}
Процедура СменитьСхему()
	СхемаКомпоновкиДанных = ПолучитьМакет("ЗдесьНадоУказатьИмяСхемы");
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
КонецПроцедуры
{% endcodeblock %}
Как видите, все просто, при желании можно сократить до двух строк или даже одной, но не уверен, что это пойдет на пользу читаемости кода. Но тут есть свой нюанс, при загрузке новых настроек старые параметры сотрутся, что на самом деле логично, но нас такое положение дел совершенно не устраивает. Какой из этого есть выход? Я думаю надо перед сменой компоновки параметры, надо сохранить в какой то буфер, а потом их восстановить. Как получить\записать параметр я уже говорил выше и не буду на это останавливаться. Так как параметров как правило больше чем два, особенно если это сложный отчет, то неправильно будет, писать
{% codeblock %}
Параметр1 = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПараметрУказанныйВЗапросе"));
СохраненноеЗначение1 = Параметр1.Значение;

Параметр2 = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПараметрУказанныйВЗапросе2"));
СохраненноеЗначение2 = Параметр2.Значение;

...//смена схемы компоновки

Параметр1 = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПараметрУказанныйВЗапросе"));
Параметр1.Значение = СохраненноеЗначение1;
Параметр1.Использование = Истина;

Параметр2 = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПараметрУказанныйВЗапросе2"));
Параметр2.Значение = СохраненноеЗначение2;
Параметр2.Использование = Истина;
//и тд
{% endcodeblock %}
Я надеюсь, что вы понимаете, что этот код написан для примера и не стоит использовать перемнные с именами "СохраненноеЗначение1","СохраненноеЗначение2", но даже если не понимаете, все равно не используйте.
Надо бы указать: СохраниСписокПараметров("ЗдесьСписокПараметров"); потом сменить схему и сделать ВосстановиСписокПараметров("ЗдесьСписокПараметров"); Этим мы и займемся, для этого далее я напишу эти две процедуры, одна будет сохранять параметры в спецально для этого отведнную структуру, другая будет из нее восстанавливать параметры. Вот они:
{% codeblock %}
Функция СохранитьПараметры(ИменаПараметров)
	Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
	МассивСИменами = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ИменаПараметров,",");
	СтруктураДляПараметров = Новый Структура;
	Для Каждого ИмяПараметра Из МассивСИменами Цикл
		Параметр = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ИмяПараметра));
		Если Параметр <> Неопределено Тогда
			СтруктураДляПараметров.Вставить(ИмяПараметра, Параметр.Значение);
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат СтруктураДляПараметров;
КонецФункции

Процедура ЗагрузитьПараметры(СтруктураСПараметрами)
	Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
    Для Каждого ТекущийПараметр Из СтруктураСПараметрами Цикл
		Параметр = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ТекущийПараметр.Ключ));
		Если Параметр <> Неопределено Тогда
	    	Параметр.Значение = ТекущийПараметр.Значение;
			Параметр.Использование = Истина;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры
{% endcodeblock %}
Остановлюсь, что бы более подробно объяснить, что происходит. Функция СохранитьПараметры принимает на входе строку с именами тех параметров которые надо сохранить. Затем в строке 6 она находит по имени нужный параметр и сохраняет в структуру, которую возвращает по окончании перебора всех параметров полученых из строки. То же самое, только наоборот делает процедура загрузить, она принимает структуру и загружает из нее в СКД параметры. Далее надо собрать все вместе, выглядеть это будет примерно так:
{% codeblock %}
Функция СохранитьПараметры(ИменаПараметров)
	Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
	МассивСИменами = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ИменаПараметров,",");
	СтруктураДляПараметров = Новый Структура;
	Для Каждого ИмяПараметра Из МассивСИменами Цикл
		Параметр = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ИмяПараметра));
		Если Параметр <> Неопределено Тогда
			СтруктураДляПараметров.Вставить(ИмяПараметра, Параметр.Значение);
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат СтруктураДляПараметров;
КонецФункции

Процедура ЗагрузитьПараметры(СтруктураСПараметрами)
	Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
    Для Каждого ТекущийПараметр Из СтруктураСПараметрами Цикл
		Параметр = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ТекущийПараметр.Ключ));
		Если Параметр <> Неопределено Тогда
	    	Параметр.Значение = ТекущийПараметр.Значение;
			Параметр.Использование = Истина;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры
 
Процедура СменитьСхему()
	СтруктураСНастройками = СохранитьПараметры("Параметр1,Параметр2,Параметр3");
	СхемаКомпоновкиДанных = ПолучитьМакет("ЗдесьИмяНужнойВамСхемы");
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	ЗагрузитьПараметры(СтруктураСНастройками);
КонецПроцедуры
{% endcodeblock %}
##Вывод СКД в отчет
Если вы создали форму отчета у СКД(то есть если у вас отчет и есть схема компоновки данных), то по умолчанию на кнопке "Сформировать" висит предустанновленная команда "Сфрмировать", которая запустит текущую схему, но можно туда повесить свой обработчик, если нужно перед формированием сделать какие нибудь манипуляции, вот код который можно туда повесить:
{% codeblock %}
КомпоновщикМакета=Новый КомпоновщикМакетаКомпоновкиДанных;
МакетКомпоновкиДанных=КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,КомпоновщикНастроек.Настройки,ДанныеРасшифровки);
ПроцессорКомпоновкиДанных=Новый ПроцессорКомпоновкиДанных;
ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных,,ДанныеРасшифровки,Истина);
ПроцессорВывода=Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
ПроцессорВывода.УстановитьДокумент(ЭлементыФормы.Результат);
ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
{% endcodeblock %}
например перед формированием отчета, можно установить заголовок, в зависимости от установленных параметров или свернуть группировки после формирования, или время там формирования засечь, всякое бывает. Также можно вывести разом, а можно управлять выводом, посмотреть детали можно в синтаксис помощнике по адресу Общие объекты -> Система компоновки данных -> Работа с механизмом -> ПроцессорВыводаРезультатаКомпоновкиДанных
###Установка в качестве параметра списка значений.
Когда нужно использовать список значений, для параметра необходимо установить галочку "Доступен список значений" иначе, даже если на входе будет список, СКД все равно будет брать только первое значение, галочка вот здесь:
{% img http://26226.selcdn.ru/1c_dev_files/pict_003.png %}
С этой галочкой в штатном списке параметров СКД, вы бонусом получаете красивый и удобный список для подбора ваших значений.

###Вывод СКД в таблицу.
Бывает нужен, если нужно проанализировать или что то сделать с результатами работы, что бы получить результат работы  СКД в таблицу значений или в дерево значений, вам поможет следующий код:
{% codeblock %}
КомпоновщикМакета=Новый КомпоновщикМакетаКомпоновкиДанных;
МакетКомпоновкиДанных=КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,КомпоновщикНастроек.Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
ПроцессорКомпоновкиДанных=Новый ПроцессорКомпоновкиДанных;
ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
	
ТЗДляВывода = Новый ТаблицаЗначений;//здесь может быть и дерево значений
ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
ПроцессорВывода.УстановитьОбъект(ТЗДляВывода);
ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
{% endcodeblock %}
собственно здесь в ТЗДляВывода мы получаем результат формирования отчета. Собственно если не касаться непосредствнно самого СКД, то здесь описаны практически все моменты работы с формой отчета построенного на СКД.
###Бонусы
Тому кто домучал до конца эту длинную повесть, пригодятся бонусы:
Курс от гилева про СКД, что бы не искать информацию про СКД, можно скачать [бесплатный курс по СКД](http://www.spec8.ru/kurs-po-skd-besplatno)
Можно взять [шаблон, в котором есть все нужные для оформления фичи](http://26226.selcdn.ru/1c_dev_files/files/Шаблон.erf)
